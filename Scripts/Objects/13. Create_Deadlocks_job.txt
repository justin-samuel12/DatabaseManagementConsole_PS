USE [msdb]
-- Allow SQL Agent to replace WMI tokens:
EXEC msdb.dbo.sp_set_sqlagent_properties @alert_replace_runtime_tokens=1

declare @job_id binary(16);
SELECT @job_id = job_id FROM msdb.dbo.sysjobs WHERE (name = N'DatabaseManagementConsole.Reports.DeadlockEvents')
IF ( @job_id is not null ) begin EXEC msdb.dbo.sp_delete_job @job_id = @job_id, @delete_unused_schedule=1 end ;

BEGIN TRANSACTION
DECLARE @ReturnCode INT
SELECT @ReturnCode = 0
/****** Object:  JobCategory [Database Reports]    Script Date: 10/22/2013 3:41:53 PM ******/
IF NOT EXISTS (SELECT name FROM msdb.dbo.syscategories WHERE name=N'Database Reportsing' AND category_class=1)
BEGIN
EXEC @ReturnCode = msdb.dbo.sp_add_category @class=N'JOB', @type=N'LOCAL', @name=N'Database Monitoring'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback

END

DECLARE @jobId BINARY(16)
EXEC @ReturnCode =  msdb.dbo.sp_add_job @job_name=N'DatabaseManagementConsole.Reports.DeadlockEvents', 
		@enabled=1, 
		@notify_level_eventlog=0, 
		@notify_level_email=0, 
		@notify_level_netsend=0, 
		@notify_level_page=0, 
		@delete_level=0, 
		@description=N'Job for responding to DEADLLOCK_GRAPH events', 
		@category_name=N'Database Reportsing', 
		@owner_login_name=N'sa', @job_id = @jobId OUTPUT
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
/****** Object:  Step [Delete Files]    Script Date: 10/22/2013 4:40:56 PM ******/
EXEC @ReturnCode = msdb.dbo.sp_add_jobstep @job_id=@jobId, @step_name=N'Insert graph into LogEvent', 
		@step_id=1, 
		@cmdexec_success_code=0, 
		@on_success_action=1, 
		@on_success_step_id=0, 
		@on_fail_action=2, 
		@on_fail_step_id=0, 
		@retry_attempts=0, 
		@retry_interval=0, 
		@os_run_priority=0, @subsystem=N'TSQL', 
		@command=N'SET QUOTED_IDENTIFIER ON;

DECLARE @Deadlockxml XML = N''$(ESCAPE_SQUOTE(WMI(TextData)))'';
EXEC [DatabaseManagementConsole].[Reports].[usp_DeadlockEvents_Insert] @Deadlockxml
', 
		@database_name=N'master', 
		@flags=0
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_update_job @job_id = @jobId, @start_step_id = 1
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
EXEC @ReturnCode = msdb.dbo.sp_add_jobserver @job_id = @jobId, @server_name = N'(local)'
IF (@@ERROR <> 0 OR @ReturnCode <> 0) GOTO QuitWithRollback
COMMIT TRANSACTION
GOTO EndSave
QuitWithRollback:
    IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
EndSave:

DECLARE @sysalert sysname = 'Respond to DEADLOCK_GRAPH';
DECLARE @server_namespace varchar(255) =  N'\\.\root\Microsoft\SqlServer\ServerEvents\MSSQLSERVER';

IF ISNULL(CHARINDEX('\',@@SERVERNAME), 0)> 0
	BEGIN
		SET @server_namespace = N'\\.\root\Microsoft\SqlServer\ServerEvents\'+SUBSTRING(@@SERVERNAME,ISNULL(CHARINDEX('\',@@SERVERNAME), 0)+ 1,LEN(@@SERVERNAME)-ISNULL(CHARINDEX('/',@@SERVERNAME), 0))
	END;
		
if ( select 1 from msdb..sysalerts where name = @sysalert) is not null
	begin EXEC msdb.dbo.sp_delete_alert @name= @sysalert end;

EXEC msdb.dbo.sp_add_alert @name = @sysalert, 
	@wmi_namespace= @server_namespace, 
    @wmi_query=N'SELECT * FROM DEADLOCK_GRAPH', 
    @job_name='DatabaseManagementConsole.Reports.DeadlockEvents';

